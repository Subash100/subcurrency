{
	"id": "db0ac88f18c24f79bce9675386da66a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"withdrawal-pattern-intro.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\n/*\nCyberSecurity In Solidity - against  bad actors , accidential occurance\n\nwithdrawal pattern ensures that direct transfer call is not made which poses a security threat.\ntransfer are atomic(meaning all or nothing)\n\nwrite an iterating function called returnFunds that will refund through the transfer method investors to a var\ncalled funders back to their wallets called contributedAmount. Add modifier to the signature \nthat only the owner can execute this function. The function should return a bool success.\n\n\ncontract test\n{   \n    modifier onlyOwner{\n        require(true);\n        _;\n    }\n    function returnFunds() public onlyOwner returns(bool sucess)\n    {\n        for(uint i =0;i<funders.length;i++)\n        {\n            funders[i].transfer(contributedAmount);\n        }\n        return true;\n    }\n\n\n/*\nwhat do you thinkn is the problem with returnFunds function??\n\n1.what if owner chickens out and does not return funds??\nthe owner is a single point of failure and this pattern \nsuggests adherence to server-centric thinking-\nonly a privileged user should be able to initiate a mass distribution of funds.\n\n2.the loop is ubound! it could very well run out of gas before allocating all the funds back\n  an attacker could do is just to make a bunch of small contributions.00000284289\n\n  another example:- We only have two investors to refund -\n\n  write a function that will return funds to two investors, john and tatianna without using a \n  forloop\n\n\nfunction returnFundss() public onlyOwner returns(bool success)\n{\n   tatiana.transfer(contributedAmount);\n   john.transfer(contributedAmount);\n   return true;\n}\n\n\n/*what could go wrong\nwhat if tatiana rejects the transfer? if tatiana rejects the transfer the function \nis going to fail and then john will not get paid!!!\n\nthinking that all contract and accounts want to accept funds automatically may be\nintuitive at first but it is in fact very naive and dangerous to build our code like this\n\nif it is more in their interest to reject funds then chances are they will reject the funds\n\nwrite a fall back function\n\nfallback () public\n{\n  //a default fallback function is not payable - it will reject funds\n\n  //if one contract has a default fallback function it would be deadly for the naive contract\n  //to refund this contract address - it will not work unless everyone accepts. It will fail\n\n  //disallow contract to receive funds\n\n  //should we disallow contract to receive fund??(no )\n  //beacuse not all contract will fail or mailcious - it would deter DAOs\n\n  //how does a contract finds out if another address is contract?\n}\n} */\n\ncontract Victim\n{\n    function isItAContract() public view returns(bool)\n    {\n        //if there are bytes of code greater than zero then it is a contract!\n        uint32 size;\n        address a = msg.sender;\n        //inline assembly accesses EVM (Ethereum Virtual Machine) at a low level\n        assembly{\n            //ectcodesize retrives the size of code\n            size := extcodesize(a)\n        }\n        return(size>0);\n    }\n}\n\ncontract attacker\n{\n    bool public trickedYou;\n    Victim victim;\n    constructor(address _v) public {\n        victim=Victim(_v);\n        trickedYou = !victim.isItAContract();\n    }\n}\n\n//well if you call the address from the constructor there are no bytes codes\n\n//What do we do?? The withdrawal Pattern"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"withdrawal-pattern-intro.sol": {
				"Victim": {
					"abi": [
						{
							"inputs": [],
							"name": "isItAContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"withdrawal-pattern-intro.sol\":2672:3109  contract Victim... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"withdrawal-pattern-intro.sol\":2672:3109  contract Victim... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x63bae962\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"withdrawal-pattern-intro.sol\":2694:3107  function isItAContract() public view returns(bool)... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"withdrawal-pattern-intro.sol\":2739:2743  bool */\n      0x00\n        /* \"withdrawal-pattern-intro.sol\":2837:2848  uint32 size */\n      dup1\n        /* \"withdrawal-pattern-intro.sol\":2858:2867  address a */\n      0x00\n        /* \"withdrawal-pattern-intro.sol\":2870:2880  msg.sender */\n      caller\n        /* \"withdrawal-pattern-intro.sol\":2858:2880  address a = msg.sender */\n      swap1\n      pop\n        /* \"withdrawal-pattern-intro.sol\":3065:3066  a */\n      dup1\n        /* \"withdrawal-pattern-intro.sol\":3053:3067  extcodesize(a) */\n      extcodesize\n        /* \"withdrawal-pattern-intro.sol\":3045:3067  size := extcodesize(a) */\n      swap2\n      pop\n        /* \"withdrawal-pattern-intro.sol\":3098:3099  0 */\n      0x00\n        /* \"withdrawal-pattern-intro.sol\":3093:3097  size */\n      dup3\n        /* \"withdrawal-pattern-intro.sol\":3093:3099  size>0 */\n      0xffffffff\n      and\n      gt\n        /* \"withdrawal-pattern-intro.sol\":3086:3100  return(size>0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"withdrawal-pattern-intro.sol\":2694:3107  function isItAContract() public view returns(bool)... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_9:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_10:\n        /* \"#utility.yul\":184:205   */\n      tag_14\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_9\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_7:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_16\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_10\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e70df3a5847183fd191a44f43e0256be37aab7f791166195d6728ec3c3523f2964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060cc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806363bae96214602d575b600080fd5b60336047565b604051603e9190607d565b60405180910390f35b6000806000339050803b915060008263ffffffff16119250505090565b60008115159050919050565b6077816064565b82525050565b6000602082019050609060008301846070565b9291505056fea2646970667358221220e70df3a5847183fd191a44f43e0256be37aab7f791166195d6728ec3c3523f2964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63BAE962 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER SWAP1 POP DUP1 EXTCODESIZE SWAP2 POP PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND GT SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x77 DUP2 PUSH1 0x64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x90 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xD RETURN 0xA5 DUP5 PUSH18 0x83FD191A44F43E0256BE37AAB7F791166195 0xD6 PUSH19 0x8EC3C3523F2964736F6C634300081100330000 ",
							"sourceMap": "2672:437:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isItAContract_21": {
									"entryPoint": 71,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806363bae96214602d575b600080fd5b60336047565b604051603e9190607d565b60405180910390f35b6000806000339050803b915060008263ffffffff16119250505090565b60008115159050919050565b6077816064565b82525050565b6000602082019050609060008301846070565b9291505056fea2646970667358221220e70df3a5847183fd191a44f43e0256be37aab7f791166195d6728ec3c3523f2964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63BAE962 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER SWAP1 POP DUP1 EXTCODESIZE SWAP2 POP PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND GT SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x77 DUP2 PUSH1 0x64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x90 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xD RETURN 0xA5 DUP5 PUSH18 0x83FD191A44F43E0256BE37AAB7F791166195 0xD6 PUSH19 0x8EC3C3523F2964736F6C634300081100330000 ",
							"sourceMap": "2672:437:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2694:413;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2739:4;2837:11;2858:9;2870:10;2858:22;;3065:1;3053:14;3045:22;;3098:1;3093:4;:6;;;3086:14;;;;2694:413;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "40800",
								"executionCost": "93",
								"totalCost": "40893"
							},
							"external": {
								"isItAContract()": "2958"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 3109,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e70df3a5847183fd191a44f43e0256be37aab7f791166195d6728ec3c3523f2964736f6c63430008110033",
									".code": [
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "63BAE962"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 3109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2694,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2694,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2880,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3053,
											"end": 3067,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 3107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"withdrawal-pattern-intro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isItAContract()": "63bae962"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isItAContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"withdrawal-pattern-intro.sol\":\"Victim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"withdrawal-pattern-intro.sol\":{\"keccak256\":\"0x65fee8b85473fa70769244ec5306db180c3f4df20acafbcb7d3d9910a474c2e4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aca1be13022551feb97b9a97f4296992869fdee3038e31c07138b384a558f0f1\",\"dweb:/ipfs/QmWDmfyGSgo1RvZkyMmq1uhZQ3E3VcDyWbMF4Xt8GAs6LY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"attacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_v",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "trickedYou",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"withdrawal-pattern-intro.sol\":3111:3295  contract attacker... */\n  mstore(0x40, 0x80)\n    /* \"withdrawal-pattern-intro.sol\":3182:3293  constructor(address _v) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"withdrawal-pattern-intro.sol\":3237:3239  _v */\n  dup1\n    /* \"withdrawal-pattern-intro.sol\":3223:3229  victim */\n  0x00\n  0x01\n    /* \"withdrawal-pattern-intro.sol\":3223:3240  victim=Victim(_v) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"withdrawal-pattern-intro.sol\":3264:3270  victim */\n  0x00\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"withdrawal-pattern-intro.sol\":3264:3284  victim.isItAContract */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x63bae962\n    /* \"withdrawal-pattern-intro.sol\":3264:3286  victim.isItAContract() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"withdrawal-pattern-intro.sol\":3263:3286  !victim.isItAContract() */\n  iszero\n    /* \"withdrawal-pattern-intro.sol\":3250:3260  trickedYou */\n  0x00\n  dup1\n    /* \"withdrawal-pattern-intro.sol\":3250:3286  trickedYou = !victim.isItAContract() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"withdrawal-pattern-intro.sol\":3182:3293  constructor(address _v) public {... */\n  pop\n    /* \"withdrawal-pattern-intro.sol\":3111:3295  contract attacker... */\n  jump(tag_10)\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_15:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_27\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_16:\n    /* \"#utility.yul\":641:665   */\n  tag_29\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_30:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_17:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_32\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_16\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_35\n  tag_12\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":932:1051   */\ntag_34:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_36\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_17\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1292   */\ntag_18:\n    /* \"#utility.yul\":1236:1243   */\n  0x00\n    /* \"#utility.yul\":1279:1284   */\n  dup2\n    /* \"#utility.yul\":1272:1285   */\n  iszero\n    /* \"#utility.yul\":1265:1286   */\n  iszero\n    /* \"#utility.yul\":1254:1286   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1298:1414   */\ntag_19:\n    /* \"#utility.yul\":1368:1389   */\n  tag_39\n    /* \"#utility.yul\":1383:1388   */\n  dup2\n    /* \"#utility.yul\":1368:1389   */\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1361:1366   */\n  dup2\n    /* \"#utility.yul\":1358:1390   */\n  eq\n    /* \"#utility.yul\":1348:1408   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1404:1405   */\n  0x00\n    /* \"#utility.yul\":1401:1402   */\n  dup1\n    /* \"#utility.yul\":1394:1406   */\n  revert\n    /* \"#utility.yul\":1348:1408   */\ntag_40:\n    /* \"#utility.yul\":1298:1414   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1420:1557   */\ntag_20:\n    /* \"#utility.yul\":1474:1479   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup2\n    /* \"#utility.yul\":1499:1512   */\n  mload\n    /* \"#utility.yul\":1490:1512   */\n  swap1\n  pop\n    /* \"#utility.yul\":1521:1551   */\n  tag_42\n    /* \"#utility.yul\":1545:1550   */\n  dup2\n    /* \"#utility.yul\":1521:1551   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1420:1557   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1563:1908   */\ntag_9:\n    /* \"#utility.yul\":1630:1636   */\n  0x00\n    /* \"#utility.yul\":1679:1681   */\n  0x20\n    /* \"#utility.yul\":1667:1676   */\n  dup3\n    /* \"#utility.yul\":1658:1665   */\n  dup5\n    /* \"#utility.yul\":1654:1677   */\n  sub\n    /* \"#utility.yul\":1650:1682   */\n  slt\n    /* \"#utility.yul\":1647:1766   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1685:1764   */\n  tag_45\n  tag_12\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1647:1766   */\ntag_44:\n    /* \"#utility.yul\":1805:1806   */\n  0x00\n    /* \"#utility.yul\":1830:1891   */\n  tag_46\n    /* \"#utility.yul\":1883:1890   */\n  dup5\n    /* \"#utility.yul\":1874:1880   */\n  dup3\n    /* \"#utility.yul\":1863:1872   */\n  dup6\n    /* \"#utility.yul\":1859:1881   */\n  add\n    /* \"#utility.yul\":1830:1891   */\n  tag_20\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1820:1891   */\n  swap2\n  pop\n    /* \"#utility.yul\":1776:1901   */\n  pop\n    /* \"#utility.yul\":1563:1908   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"withdrawal-pattern-intro.sol\":3111:3295  contract attacker... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"withdrawal-pattern-intro.sol\":3111:3295  contract attacker... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x406daca1\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"withdrawal-pattern-intro.sol\":3135:3157  bool public trickedYou */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_8:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_9:\n        /* \"#utility.yul\":184:205   */\n      tag_13\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_8\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_7:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_15\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_9\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220814adc48ad49f3b0589dfcbce4047e82d763e1bcfc99ff61293e08c7ef22982664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1911:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1254:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1279:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1272:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1272:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1254:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1226:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1236:7:1",
														"type": ""
													}
												],
												"src": "1202:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1338:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1392:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1401:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1394:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1394:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1394:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1361:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1383:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1368:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1368:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1358:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:40:1"
															},
															"nodeType": "YulIf",
															"src": "1348:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1331:5:1",
														"type": ""
													}
												],
												"src": "1298:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1490:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1505:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1490:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1545:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1521:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1521:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1458:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1466:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:1",
														"type": ""
													}
												],
												"src": "1420:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1637:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1683:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1685:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1685:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1685:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1658:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1667:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1654:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1679:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:32:1"
															},
															"nodeType": "YulIf",
															"src": "1647:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1776:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1791:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1805:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1795:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1820:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1863:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1874:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1859:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1859:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1883:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1830:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1820:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1607:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1618:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1630:6:1",
														"type": ""
													}
												],
												"src": "1563:345:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102e63803806102e683398181016040528101906100329190610186565b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363bae9626040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010491906101eb565b156000806101000a81548160ff02191690831515021790555050610218565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015382610128565b9050919050565b61016381610148565b811461016e57600080fd5b50565b6000815190506101808161015a565b92915050565b60006020828403121561019c5761019b610123565b5b60006101aa84828501610171565b91505092915050565b60008115159050919050565b6101c8816101b3565b81146101d357600080fd5b50565b6000815190506101e5816101bf565b92915050565b60006020828403121561020157610200610123565b5b600061020f848285016101d6565b91505092915050565b60c0806102266000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063406daca114602d575b600080fd5b60336047565b604051603e91906071565b60405180910390f35b60008054906101000a900460ff1681565b60008115159050919050565b606b816058565b82525050565b6000602082019050608460008301846064565b9291505056fea2646970667358221220814adc48ad49f3b0589dfcbce4047e82d763e1bcfc99ff61293e08c7ef22982664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E6 CODESIZE SUB DUP1 PUSH2 0x2E6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x63BAE962 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1EB JUMP JUMPDEST ISZERO PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153 DUP3 PUSH2 0x128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163 DUP2 PUSH2 0x148 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x180 DUP2 PUSH2 0x15A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C JUMPI PUSH2 0x19B PUSH2 0x123 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP5 DUP3 DUP6 ADD PUSH2 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8 DUP2 PUSH2 0x1B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E5 DUP2 PUSH2 0x1BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201 JUMPI PUSH2 0x200 PUSH2 0x123 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20F DUP5 DUP3 DUP6 ADD PUSH2 0x1D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP1 PUSH2 0x226 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x406DACA1 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6B DUP2 PUSH1 0x58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x84 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4A 0xDC BASEFEE 0xAD 0x49 RETURN 0xB0 PC SWAP14 0xFC 0xBC 0xE4 DIV PUSH31 0x82D763E1BCFC99FF61293E08C7EF22982664736F6C63430008110033000000 ",
							"sourceMap": "3111:184:0:-:0;;;3182:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3237:2;3223:6;;:17;;;;;;;;;;;;;;;;;;3264:6;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3263:23;3250:10;;:36;;;;;;;;;;;;;;;;;;3182:111;3111:184;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:90::-;1236:7;1279:5;1272:13;1265:21;1254:32;;1202:90;;;:::o;1298:116::-;1368:21;1383:5;1368:21;:::i;:::-;1361:5;1358:32;1348:60;;1404:1;1401;1394:12;1348:60;1298:116;:::o;1420:137::-;1474:5;1505:6;1499:13;1490:22;;1521:30;1545:5;1521:30;:::i;:::-;1420:137;;;;:::o;1563:345::-;1630:6;1679:2;1667:9;1658:7;1654:23;1650:32;1647:119;;;1685:79;;:::i;:::-;1647:119;1805:1;1830:61;1883:7;1874:6;1863:9;1859:22;1830:61;:::i;:::-;1820:71;;1776:125;1563:345;;;;:::o;3111:184:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@trickedYou_24": {
									"entryPoint": 71,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063406daca114602d575b600080fd5b60336047565b604051603e91906071565b60405180910390f35b60008054906101000a900460ff1681565b60008115159050919050565b606b816058565b82525050565b6000602082019050608460008301846064565b9291505056fea2646970667358221220814adc48ad49f3b0589dfcbce4047e82d763e1bcfc99ff61293e08c7ef22982664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x406DACA1 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6B DUP2 PUSH1 0x58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x84 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4A 0xDC BASEFEE 0xAD 0x49 RETURN 0xB0 PC SWAP14 0xFC 0xBC 0xE4 DIV PUSH31 0x82D763E1BCFC99FF61293E08C7EF22982664736F6C63430008110033000000 ",
							"sourceMap": "3111:184:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "38400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"trickedYou()": "2446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3182,
									"end": 3293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3237,
									"end": 3239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3223,
									"end": 3229,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3223,
									"end": 3240,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3264,
									"end": 3270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3284,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3264,
									"end": 3284,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3284,
									"name": "PUSH",
									"source": 0,
									"value": "63BAE962"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3264,
									"end": 3286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3264,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3263,
									"end": 3286,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3250,
									"end": 3260,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3250,
									"end": 3286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3182,
									"end": 3293,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1292,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1202,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1236,
									"end": 1243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1285,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1265,
									"end": 1286,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1292,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1292,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1292,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1298,
									"end": 1414,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1298,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1383,
									"end": 1388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1368,
									"end": 1389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1389,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1368,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1390,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1348,
									"end": 1408,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1404,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 1402,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1406,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1348,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1298,
									"end": 1414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1298,
									"end": 1414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1557,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1420,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1512,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1512,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1545,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1521,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1551,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1521,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1557,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1908,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1563,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1679,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1665,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1677,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1682,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1766,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1647,
									"end": 1766,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1685,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1685,
									"end": 1764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1764,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1685,
									"end": 1764,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1766,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1647,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1805,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1830,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1883,
									"end": 1890,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1880,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1881,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1830,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1891,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1830,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1820,
									"end": 1891,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1820,
									"end": 1891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1908,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1908,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1908,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3111,
									"end": 3295,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220814adc48ad49f3b0589dfcbce4047e82d763e1bcfc99ff61293e08c7ef22982664736f6c63430008110033",
									".code": [
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "406DACA1"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3135,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3135,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"withdrawal-pattern-intro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"trickedYou()": "406daca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_v\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"trickedYou\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"withdrawal-pattern-intro.sol\":\"attacker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"withdrawal-pattern-intro.sol\":{\"keccak256\":\"0x65fee8b85473fa70769244ec5306db180c3f4df20acafbcb7d3d9910a474c2e4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aca1be13022551feb97b9a97f4296992869fdee3038e31c07138b384a558f0f1\",\"dweb:/ipfs/QmWDmfyGSgo1RvZkyMmq1uhZQ3E3VcDyWbMF4Xt8GAs6LY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "withdrawal-pattern-intro.sol:attacker",
								"label": "trickedYou",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "withdrawal-pattern-intro.sol:attacker",
								"label": "victim",
								"offset": 1,
								"slot": "0",
								"type": "t_contract(Victim)22"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Victim)22": {
								"encoding": "inplace",
								"label": "contract Victim",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n   --> withdrawal-pattern-intro.sol:103:5:\n    |\n103 |     constructor(address _v) public {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3293,
					"file": "withdrawal-pattern-intro.sol",
					"start": 3182
				},
				"type": "Warning"
			}
		],
		"sources": {
			"withdrawal-pattern-intro.sol": {
				"ast": {
					"absolutePath": "withdrawal-pattern-intro.sol",
					"exportedSymbols": {
						"Victim": [
							22
						],
						"attacker": [
							47
						]
					},
					"id": 48,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Victim",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Victim",
							"nameLocation": "2681:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "2749:358:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "2844:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 20,
														"src": "2837:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 6,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2837:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 8,
												"nodeType": "VariableDeclarationStatement",
												"src": "2837:11:0"
											},
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "2866:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 20,
														"src": "2858:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 9,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2858:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 13,
												"initialValue": {
													"expression": {
														"id": 11,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2870:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2874:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2870:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2858:22:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2979:98:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3045:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "3065:1:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "3053:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:14:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3045:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "3065:1:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "3045:4:0",
														"valueSize": 1
													}
												],
												"id": 14,
												"nodeType": "InlineAssembly",
												"src": "2971:106:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 15,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "3093:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3093:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 18,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3092:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5,
												"id": 19,
												"nodeType": "Return",
												"src": "3086:14:0"
											}
										]
									},
									"functionSelector": "63bae962",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isItAContract",
									"nameLocation": "2703:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "2739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:0"
									},
									"scope": 22,
									"src": "2694:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "2672:437:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "attacker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "attacker",
							"nameLocation": "3120:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "406daca1",
									"id": 24,
									"mutability": "mutable",
									"name": "trickedYou",
									"nameLocation": "3147:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "3135:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 23,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3135:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "victim",
									"nameLocation": "3170:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "3163:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Victim_$22",
										"typeString": "contract Victim"
									},
									"typeName": {
										"id": 26,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 25,
											"name": "Victim",
											"nameLocations": [
												"3163:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 22,
											"src": "3163:6:0"
										},
										"referencedDeclaration": 22,
										"src": "3163:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Victim_$22",
											"typeString": "contract Victim"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "3213:80:0",
										"statements": [
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "victim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3223:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Victim_$22",
															"typeString": "contract Victim"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 34,
																"name": "_v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3237:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 33,
															"name": "Victim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "3230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Victim_$22_$",
																"typeString": "type(contract Victim)"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3230:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Victim_$22",
															"typeString": "contract Victim"
														}
													},
													"src": "3223:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Victim_$22",
														"typeString": "contract Victim"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "3223:17:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 38,
														"name": "trickedYou",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3250:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3263:23:0",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 39,
																	"name": "victim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "3264:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Victim_$22",
																		"typeString": "contract Victim"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3271:13:0",
																"memberName": "isItAContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "3264:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																	"typeString": "function () view external returns (bool)"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3264:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3250:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "3250:36:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_v",
												"nameLocation": "3202:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "3194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:12:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3213:0:0"
									},
									"scope": 47,
									"src": "3182:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "3111:184:0",
							"usedErrors": []
						}
					],
					"src": "36:3379:0"
				},
				"id": 0
			}
		}
	}
}