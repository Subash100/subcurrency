{
	"id": "7940eb07d00a7f77b25161597df2f3e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"advance-error-handling2.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\n/*\nExercise:\n\n1.create a contract called Vendor with a state variable address seller\n  It should contain a modifier onlySeller that requires the msg.sender to be seller.\n2.Add a dunction becomeSeller which sets sellern to the msg.sender.\n3.create a function named sell which is payable and check so see if an input of an amount \n  is greater than msg.value \n  to revert that there is not enough ether provided as an throw error   \n*/\n\ncontract Vendor\n{   \n    address seller;\n    modifier onlySeller()\n    {\n        require(seller == msg.sender, \"only seller can sell this\");\n       _;\n    }\n\n    function becomeSeller() public\n    {\n        seller = msg.sender;\n    }\n\n    function sell(uint amount) public payable onlySeller\n    {\n        if(amount>msg.value){revert(\"Not Enough Ether Provided\");}\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"advance-error-handling2.sol": {
				"Vendor": {
					"abi": [
						{
							"inputs": [],
							"name": "becomeSeller",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"advance-error-handling2.sol\":504:876  contract Vendor... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"advance-error-handling2.sol\":504:876  contract Vendor... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f299b1e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"advance-error-handling2.sol\":666:737  function becomeSeller() public... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"advance-error-handling2.sol\":743:874  function sell(uint amount) public payable onlySeller... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"advance-error-handling2.sol\":666:737  function becomeSeller() public... */\n    tag_6:\n        /* \"advance-error-handling2.sol\":720:730  msg.sender */\n      caller\n        /* \"advance-error-handling2.sol\":711:717  seller */\n      0x00\n      dup1\n        /* \"advance-error-handling2.sol\":711:730  seller = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"advance-error-handling2.sol\":666:737  function becomeSeller() public... */\n      jump\t// out\n        /* \"advance-error-handling2.sol\":743:874  function sell(uint amount) public payable onlySeller... */\n    tag_10:\n        /* \"advance-error-handling2.sol\":603:613  msg.sender */\n      caller\n        /* \"advance-error-handling2.sol\":593:613  seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"advance-error-handling2.sol\":593:599  seller */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"advance-error-handling2.sol\":593:613  seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"advance-error-handling2.sol\":585:643  require(seller == msg.sender, \"only seller can sell this\") */\n      tag_13\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_13:\n        /* \"advance-error-handling2.sol\":820:829  msg.value */\n      callvalue\n        /* \"advance-error-handling2.sol\":813:819  amount */\n      dup2\n        /* \"advance-error-handling2.sol\":813:829  amount>msg.value */\n      gt\n        /* \"advance-error-handling2.sol\":810:868  if(amount>msg.value){revert(\"Not Enough Ether Provided\");} */\n      iszero\n      tag_17\n      jumpi\n        /* \"advance-error-handling2.sol\":831:866  revert(\"Not Enough Ether Provided\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"advance-error-handling2.sol\":810:868  if(amount>msg.value){revert(\"Not Enough Ether Provided\");} */\n    tag_17:\n        /* \"advance-error-handling2.sol\":743:874  function sell(uint amount) public payable onlySeller... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_21:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_23:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_24:\n        /* \"#utility.yul\":490:514   */\n      tag_37\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_38:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_25:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_40\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_24\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_43\n      tag_21\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":766:885   */\n    tag_42:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_44\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1194   */\n    tag_26:\n        /* \"#utility.yul\":1109:1120   */\n      0x00\n        /* \"#utility.yul\":1143:1149   */\n      dup3\n        /* \"#utility.yul\":1138:1141   */\n      dup3\n        /* \"#utility.yul\":1131:1150   */\n      mstore\n        /* \"#utility.yul\":1183:1187   */\n      0x20\n        /* \"#utility.yul\":1178:1181   */\n      dup3\n        /* \"#utility.yul\":1174:1188   */\n      add\n        /* \"#utility.yul\":1159:1188   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1200:1375   */\n    tag_27:\n        /* \"#utility.yul\":1340:1367   */\n      0x6f6e6c792073656c6c65722063616e2073656c6c207468697300000000000000\n        /* \"#utility.yul\":1336:1337   */\n      0x00\n        /* \"#utility.yul\":1328:1334   */\n      dup3\n        /* \"#utility.yul\":1324:1338   */\n      add\n        /* \"#utility.yul\":1317:1368   */\n      mstore\n        /* \"#utility.yul\":1200:1375   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1747   */\n    tag_28:\n        /* \"#utility.yul\":1523:1526   */\n      0x00\n        /* \"#utility.yul\":1544:1611   */\n      tag_48\n        /* \"#utility.yul\":1608:1610   */\n      0x19\n        /* \"#utility.yul\":1603:1606   */\n      dup4\n        /* \"#utility.yul\":1544:1611   */\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1537:1611   */\n      swap2\n      pop\n        /* \"#utility.yul\":1620:1713   */\n      tag_49\n        /* \"#utility.yul\":1709:1712   */\n      dup3\n        /* \"#utility.yul\":1620:1713   */\n      tag_27\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1738:1740   */\n      0x20\n        /* \"#utility.yul\":1733:1736   */\n      dup3\n        /* \"#utility.yul\":1729:1741   */\n      add\n        /* \"#utility.yul\":1722:1741   */\n      swap1\n      pop\n        /* \"#utility.yul\":1381:1747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1753:2172   */\n    tag_15:\n        /* \"#utility.yul\":1919:1923   */\n      0x00\n        /* \"#utility.yul\":1957:1959   */\n      0x20\n        /* \"#utility.yul\":1946:1955   */\n      dup3\n        /* \"#utility.yul\":1942:1960   */\n      add\n        /* \"#utility.yul\":1934:1960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2006:2015   */\n      dup2\n        /* \"#utility.yul\":2000:2004   */\n      dup2\n        /* \"#utility.yul\":1996:2016   */\n      sub\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":1981:1990   */\n      dup4\n        /* \"#utility.yul\":1977:1994   */\n      add\n        /* \"#utility.yul\":1970:2017   */\n      mstore\n        /* \"#utility.yul\":2034:2165   */\n      tag_51\n        /* \"#utility.yul\":2160:2164   */\n      dup2\n        /* \"#utility.yul\":2034:2165   */\n      tag_28\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2026:2165   */\n      swap1\n      pop\n        /* \"#utility.yul\":1753:2172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2178:2353   */\n    tag_29:\n        /* \"#utility.yul\":2318:2345   */\n      0x4e6f7420456e6f7567682045746865722050726f766964656400000000000000\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2306:2312   */\n      dup3\n        /* \"#utility.yul\":2302:2316   */\n      add\n        /* \"#utility.yul\":2295:2346   */\n      mstore\n        /* \"#utility.yul\":2178:2353   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2725   */\n    tag_30:\n        /* \"#utility.yul\":2501:2504   */\n      0x00\n        /* \"#utility.yul\":2522:2589   */\n      tag_54\n        /* \"#utility.yul\":2586:2588   */\n      0x19\n        /* \"#utility.yul\":2581:2584   */\n      dup4\n        /* \"#utility.yul\":2522:2589   */\n      tag_26\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2515:2589   */\n      swap2\n      pop\n        /* \"#utility.yul\":2598:2691   */\n      tag_55\n        /* \"#utility.yul\":2687:2690   */\n      dup3\n        /* \"#utility.yul\":2598:2691   */\n      tag_29\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2716:2718   */\n      0x20\n        /* \"#utility.yul\":2711:2714   */\n      dup3\n        /* \"#utility.yul\":2707:2719   */\n      add\n        /* \"#utility.yul\":2700:2719   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:3150   */\n    tag_19:\n        /* \"#utility.yul\":2897:2901   */\n      0x00\n        /* \"#utility.yul\":2935:2937   */\n      0x20\n        /* \"#utility.yul\":2924:2933   */\n      dup3\n        /* \"#utility.yul\":2920:2938   */\n      add\n        /* \"#utility.yul\":2912:2938   */\n      swap1\n      pop\n        /* \"#utility.yul\":2984:2993   */\n      dup2\n        /* \"#utility.yul\":2978:2982   */\n      dup2\n        /* \"#utility.yul\":2974:2994   */\n      sub\n        /* \"#utility.yul\":2970:2971   */\n      0x00\n        /* \"#utility.yul\":2959:2968   */\n      dup4\n        /* \"#utility.yul\":2955:2972   */\n      add\n        /* \"#utility.yul\":2948:2995   */\n      mstore\n        /* \"#utility.yul\":3012:3143   */\n      tag_57\n        /* \"#utility.yul\":3138:3142   */\n      dup2\n        /* \"#utility.yul\":3012:3143   */\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":3004:3143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2731:3150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122066302b10899729e3e354431e545f6b7de23b4bab019119199e42df3c91a1117264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102fe806100206000396000f3fe6080604052600436106100295760003560e01c80638f299b1e1461002e578063e4849b3214610045575b600080fd5b34801561003a57600080fd5b50610043610061565b005b61005f600480360381019061005a91906101b2565b6100a3565b005b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610131576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101289061023c565b60405180910390fd5b34811115610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b906102a8565b60405180910390fd5b50565b600080fd5b6000819050919050565b61018f8161017c565b811461019a57600080fd5b50565b6000813590506101ac81610186565b92915050565b6000602082840312156101c8576101c7610177565b5b60006101d68482850161019d565b91505092915050565b600082825260208201905092915050565b7f6f6e6c792073656c6c65722063616e2073656c6c207468697300000000000000600082015250565b60006102266019836101df565b9150610231826101f0565b602082019050919050565b6000602082019050818103600083015261025581610219565b9050919050565b7f4e6f7420456e6f7567682045746865722050726f766964656400000000000000600082015250565b60006102926019836101df565b915061029d8261025c565b602082019050919050565b600060208201905081810360008301526102c181610285565b905091905056fea264697066735822122066302b10899729e3e354431e545f6b7de23b4bab019119199e42df3c91a1117264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F299B1E EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x131 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128 SWAP1 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP2 GT ISZERO PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C7 PUSH2 0x177 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP5 DUP3 DUP6 ADD PUSH2 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792073656C6C65722063616E2073656C6C207468697300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226 PUSH1 0x19 DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x231 DUP3 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255 DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F7567682045746865722050726F766964656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x292 PUSH1 0x19 DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x29D DUP3 PUSH2 0x25C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C1 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x302B10899729E3 0xE3 SLOAD NUMBER 0x1E SLOAD 0x5F PUSH12 0x7DE23B4BAB019119199E42DF EXTCODECOPY SWAP2 LOG1 GT PUSH19 0x64736F6C634300081100330000000000000000 ",
							"sourceMap": "504:372:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@becomeSeller_24": {
									"entryPoint": 97,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_42": {
									"entryPoint": 163,
									"id": 42,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3153:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1121:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1138:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1143:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1159:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1178:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1174:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1159:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1093:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1109:11:1",
														"type": ""
													}
												],
												"src": "1025:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1306:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1328:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1336:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1324:14:1"
																	},
																	{
																		"hexValue": "6f6e6c792073656c6c65722063616e2073656c6c2074686973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1340:27:1",
																		"type": "",
																		"value": "only seller can sell this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1298:6:1",
														"type": ""
													}
												],
												"src": "1200:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1537:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1603:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1544:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1537:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1709:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565",
																	"nodeType": "YulIdentifier",
																	"src": "1620:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1620:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1722:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1733:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1515:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1523:3:1",
														"type": ""
													}
												],
												"src": "1381:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1924:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1934:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1946:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1957:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1934:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1992:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2000:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1970:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2026:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2160:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2034:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2026:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1904:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1919:4:1",
														"type": ""
													}
												],
												"src": "1753:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2306:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2314:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2302:14:1"
																	},
																	{
																		"hexValue": "4e6f7420456e6f7567682045746865722050726f7669646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2318:27:1",
																		"type": "",
																		"value": "Not Enough Ether Provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2295:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													}
												],
												"src": "2178:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2505:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2515:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2581:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2522:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2687:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0",
																	"nodeType": "YulIdentifier",
																	"src": "2598:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2598:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2700:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2711:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2700:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2493:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2501:3:1",
														"type": ""
													}
												],
												"src": "2359:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2902:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2912:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2924:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2912:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2970:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2955:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2978:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2984:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2948:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3004:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3138:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3012:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3004:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2882:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2897:4:1",
														"type": ""
													}
												],
												"src": "2731:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565(memPtr) {\n\n        mstore(add(memPtr, 0), \"only seller can sell this\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Enough Ether Provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80638f299b1e1461002e578063e4849b3214610045575b600080fd5b34801561003a57600080fd5b50610043610061565b005b61005f600480360381019061005a91906101b2565b6100a3565b005b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610131576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101289061023c565b60405180910390fd5b34811115610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b906102a8565b60405180910390fd5b50565b600080fd5b6000819050919050565b61018f8161017c565b811461019a57600080fd5b50565b6000813590506101ac81610186565b92915050565b6000602082840312156101c8576101c7610177565b5b60006101d68482850161019d565b91505092915050565b600082825260208201905092915050565b7f6f6e6c792073656c6c65722063616e2073656c6c207468697300000000000000600082015250565b60006102266019836101df565b9150610231826101f0565b602082019050919050565b6000602082019050818103600083015261025581610219565b9050919050565b7f4e6f7420456e6f7567682045746865722050726f766964656400000000000000600082015250565b60006102926019836101df565b915061029d8261025c565b602082019050919050565b600060208201905081810360008301526102c181610285565b905091905056fea264697066735822122066302b10899729e3e354431e545f6b7de23b4bab019119199e42df3c91a1117264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F299B1E EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x131 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128 SWAP1 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP2 GT ISZERO PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C7 PUSH2 0x177 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP5 DUP3 DUP6 ADD PUSH2 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792073656C6C65722063616E2073656C6C207468697300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226 PUSH1 0x19 DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x231 DUP3 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255 DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F7567682045746865722050726F766964656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x292 PUSH1 0x19 DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x29D DUP3 PUSH2 0x25C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C1 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x302B10899729E3 0xE3 SLOAD NUMBER 0x1E SLOAD 0x5F PUSH12 0x7DE23B4BAB019119199E42DF EXTCODECOPY SWAP2 LOG1 GT PUSH19 0x64736F6C634300081100330000000000000000 ",
							"sourceMap": "504:372:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;666:71;;;;;;;;;;;;;:::i;:::-;;743:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;666:71;720:10;711:6;;:19;;;;;;;;;;;;;;;;;;666:71::o;743:131::-;603:10;593:20;;:6;;;;;;;;;;:20;;;585:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;820:9:::1;813:6;:16;810:58;;;831:35;;;;;;;;;;:::i;:::-;;;;;;;;810:58;743:131:::0;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:169::-;1109:11;1143:6;1138:3;1131:19;1183:4;1178:3;1174:14;1159:29;;1025:169;;;;:::o;1200:175::-;1340:27;1336:1;1328:6;1324:14;1317:51;1200:175;:::o;1381:366::-;1523:3;1544:67;1608:2;1603:3;1544:67;:::i;:::-;1537:74;;1620:93;1709:3;1620:93;:::i;:::-;1738:2;1733:3;1729:12;1722:19;;1381:366;;;:::o;1753:419::-;1919:4;1957:2;1946:9;1942:18;1934:26;;2006:9;2000:4;1996:20;1992:1;1981:9;1977:17;1970:47;2034:131;2160:4;2034:131;:::i;:::-;2026:139;;1753:419;;;:::o;2178:175::-;2318:27;2314:1;2306:6;2302:14;2295:51;2178:175;:::o;2359:366::-;2501:3;2522:67;2586:2;2581:3;2522:67;:::i;:::-;2515:74;;2598:93;2687:3;2598:93;:::i;:::-;2716:2;2711:3;2707:12;2700:19;;2359:366;;;:::o;2731:419::-;2897:4;2935:2;2924:9;2920:18;2912:26;;2984:9;2978:4;2974:20;2970:1;2959:9;2955:17;2948:47;3012:131;3138:4;3012:131;:::i;:::-;3004:139;;2731:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "153200",
								"executionCost": "196",
								"totalCost": "153396"
							},
							"external": {
								"becomeSeller()": "24388",
								"sell(uint256)": "2861"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 504,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 876,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066302b10899729e3e354431e545f6b7de23b4bab019119199e42df3c91a1117264736f6c63430008110033",
									".code": [
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "8F299B1E"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "E4849B32"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 876,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 666,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 743,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 743,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 666,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 711,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 711,
											"end": 730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 743,
											"end": 874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 613,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 593,
											"end": 599,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 593,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 585,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 585,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 585,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 829,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 831,
											"end": 866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 866,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 810,
											"end": 868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 743,
											"end": 874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1200,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "6F6E6C792073656C6C65722063616E2073656C6C207468697300000000000000"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1381,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1603,
											"end": 1606,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1544,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1611,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1544,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1709,
											"end": 1712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1620,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1713,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1620,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1753,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2034,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2034,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2178,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420456E6F7567682045746865722050726F766964656400000000000000"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2586,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2581,
											"end": 2584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2522,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2687,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2598,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 3150,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2731,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3138,
											"end": 3142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3012,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3143,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3012,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 3150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 3150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 3150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 3150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"advance-error-handling2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"becomeSeller()": "8f299b1e",
							"sell(uint256)": "e4849b32"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"becomeSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"advance-error-handling2.sol\":\"Vendor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"advance-error-handling2.sol\":{\"keccak256\":\"0x94acfbf69cd71988e9b98769b503ed886b07fae3d411297cbd5d333b057ede98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f1bc5c27381b6a31f136bd67099834091e9b6c42b7a6176044c55bd1d487b46\",\"dweb:/ipfs/QmWLvJnxQF5GeuQpDsR6SoNzRYrgeqsBzzmBnFmoKjtMAW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "advance-error-handling2.sol:Vendor",
								"label": "seller",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"advance-error-handling2.sol": {
				"ast": {
					"absolutePath": "advance-error-handling2.sol",
					"exportedSymbols": {
						"Vendor": [
							43
						]
					},
					"id": 44,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Vendor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "Vendor",
							"nameLocation": "513:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "seller",
									"nameLocation": "537:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "529:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "575:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 6,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "593:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 7,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "603:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "607:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "603:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "593:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792073656c6c65722063616e2073656c6c2074686973",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "615:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565",
																"typeString": "literal_string \"only seller can sell this\""
															},
															"value": "only seller can sell this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0a3327768aa2f9f155cf50c3a4f497a952d1cd95772894e7630c0e3164fe565",
																"typeString": "literal_string \"only seller can sell this\""
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "585:58:0"
											},
											{
												"id": 13,
												"nodeType": "PlaceholderStatement",
												"src": "652:1:0"
											}
										]
									},
									"id": 15,
									"name": "onlySeller",
									"nameLocation": "558:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:0"
									},
									"src": "549:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "701:36:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "711:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "720:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "724:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "720:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "711:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "711:19:0"
											}
										]
									},
									"functionSelector": "8f299b1e",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "becomeSeller",
									"nameLocation": "675:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:0"
									},
									"scope": 43,
									"src": "666:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "800:74:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 31,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "813:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 32,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "820:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "824:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "820:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "813:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"nodeType": "IfStatement",
												"src": "810:58:0",
												"trueBody": {
													"id": 39,
													"nodeType": "Block",
													"src": "830:38:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4e6f7420456e6f7567682045746865722050726f7669646564",
																		"id": 36,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "838:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0",
																			"typeString": "literal_string \"Not Enough Ether Provided\""
																		},
																		"value": "Not Enough Ether Provided"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_3b24e7e98f08a630967884588575baa86ae7abab13e27d316a9f9c6f24b785c0",
																			"typeString": "literal_string \"Not Enough Ether Provided\""
																		}
																	],
																	"id": 35,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "831:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "831:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "831:35:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlySeller",
												"nameLocations": [
													"785:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 15,
												"src": "785:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "785:10:0"
										}
									],
									"name": "sell",
									"nameLocation": "752:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "757:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:13:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:0"
									},
									"scope": 43,
									"src": "743:131:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "504:372:0",
							"usedErrors": []
						}
					],
					"src": "36:840:0"
				},
				"id": 0
			}
		}
	}
}